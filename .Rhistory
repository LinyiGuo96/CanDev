mapping = aes(fill = Total), show.legend=F)
p_out <- p + geom_sf(color = "gray60",
size = 0.001) +
scale_fill_gradientn(colours = c('white','pink','red4')) +
theme_map() +
theme(panel.grid.major = element_line(color = "white"),
legend.key = element_rect(color = "gray40", size = 0.1))
#ggsave("figures/canada.pdf", p_out, height = 12, width = 15)
p_out
canada_cd_zone = canada_cd %>% mutate(Zone = substr(as.character(CFSAUID),1,1))
canada_cd_zone = merge(canada_cd_zone, summary_by_zone, by='Zone')
canada_cd_zone_K = canada_cd_zone %>% filter(Zone %in% c('K','L','M','N'))
## Simple feature collection with 293 features and 6 fields
## geometry type:  MULTIPOLYGON
## dimension:      XY
## bbox:           xmin: -2529065 ymin: 5816874 xmax: 2793734 ymax: 10396190
## epsg (SRID):    NA
## proj4string:    +proj=lcc +lat_1=49 +lat_2=77 +lat_0=0 +lon_0=-91.52 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs
## First 10 features:
##    CDUID          CDNAME CDTYPE PRUID                                  PRNAME rmapshaperid                       geometry
## 1   4609 Division No.  9    CDR    46                                Manitoba            0 MULTIPOLYGON (((-457449.9 6...
## 2   5901   East Kootenay     RD    59 British Columbia / Colombie-Britannique            1 MULTIPOLYGON (((-1628202 69...
## 3   5933 Thompson-Nicola     RD    59 British Columbia / Colombie-Britannique            2 MULTIPOLYGON (((-1838098 74...
## 4   4816 Division No. 16    CDR    48                                 Alberta            3 MULTIPOLYGON (((-988280.5 7...
## 5   5919 Cowichan Valley     RD    59 British Columbia / Colombie-Britannique            4 MULTIPOLYGON (((-2253700 71...
## 6   4621 Division No. 21    CDR    46                                Manitoba            5 MULTIPOLYGON (((-461578.4 7...
## 7   4608 Division No.  8    CDR    46                                Manitoba            6 MULTIPOLYGON (((-500377.6 6...
## 8   4811 Division No. 11    CDR    48                                 Alberta            7 MULTIPOLYGON (((-1350599 73...
## 9   4802 Division No.  2    CDR    48                                 Alberta            8 MULTIPOLYGON (((-1372235 69...
##10  5951 Bulkley-Nechako     RD    59 British Columbia / Colombie-Britannique            9 ## MULTIPOLYGON (((-1921887 78...
#Finally, and just because I donât have any census-district-level data to hand at the moment, we make a vector of repeated colors to fill in the map, for decoration only, if you want to color all the census divisions.
# Amount_perc = round((percent$Proportion+0.1)*1000)
# #vector_13(round)
# Color_per = colorRampPalette(c("gray100","red4"))(1000)
# #numr,100
# map_colors <-  Color_per[Amount_perc]
# #vector of 13
#Instead, weâll just map the fill to PRUID, i.e. the province level. But try mapping fill to CDUID instead (the census district ID), and see what happens.
p <- ggplot(data = canada_cd_zone_K,
mapping = aes(fill = Total), show.legend=F)
p_out <- p + geom_sf(color = "gray60",
size = 0.001) +
scale_fill_gradientn(colours = c('white','pink','red4')) +
theme_map() +
theme(panel.grid.major = element_line(color = "white"),
legend.key = element_rect(color = "gray40", size = 0.1))
#ggsave("figures/canada.pdf", p_out, height = 12, width = 15)
p_out
summary_by_zone = data %>%  group_by(Zone) %>% summarise(Total = sum(Value))
canada_cd <- st_transform(canada_cd, crs = "+proj=lcc +lat_1=49 +lat_2=77 +lon_0=-91.52 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs")
canada_cd_zone = canada_cd %>% mutate(Zone = substr(as.character(CFSAUID),1,1))
canada_cd_zone = merge(canada_cd_zone, summary_by_zone, by='Zone')
canada_cd_zone_K = canada_cd_zone %>% filter(Zone %in% c('K','L','M','N'))
## Simple feature collection with 293 features and 6 fields
## geometry type:  MULTIPOLYGON
## dimension:      XY
## bbox:           xmin: -2529065 ymin: 5816874 xmax: 2793734 ymax: 10396190
## epsg (SRID):    NA
## proj4string:    +proj=lcc +lat_1=49 +lat_2=77 +lat_0=0 +lon_0=-91.52 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs
## First 10 features:
##    CDUID          CDNAME CDTYPE PRUID                                  PRNAME rmapshaperid                       geometry
## 1   4609 Division No.  9    CDR    46                                Manitoba            0 MULTIPOLYGON (((-457449.9 6...
## 2   5901   East Kootenay     RD    59 British Columbia / Colombie-Britannique            1 MULTIPOLYGON (((-1628202 69...
## 3   5933 Thompson-Nicola     RD    59 British Columbia / Colombie-Britannique            2 MULTIPOLYGON (((-1838098 74...
## 4   4816 Division No. 16    CDR    48                                 Alberta            3 MULTIPOLYGON (((-988280.5 7...
## 5   5919 Cowichan Valley     RD    59 British Columbia / Colombie-Britannique            4 MULTIPOLYGON (((-2253700 71...
## 6   4621 Division No. 21    CDR    46                                Manitoba            5 MULTIPOLYGON (((-461578.4 7...
## 7   4608 Division No.  8    CDR    46                                Manitoba            6 MULTIPOLYGON (((-500377.6 6...
## 8   4811 Division No. 11    CDR    48                                 Alberta            7 MULTIPOLYGON (((-1350599 73...
## 9   4802 Division No.  2    CDR    48                                 Alberta            8 MULTIPOLYGON (((-1372235 69...
##10  5951 Bulkley-Nechako     RD    59 British Columbia / Colombie-Britannique            9 ## MULTIPOLYGON (((-1921887 78...
#Finally, and just because I donât have any census-district-level data to hand at the moment, we make a vector of repeated colors to fill in the map, for decoration only, if you want to color all the census divisions.
# Amount_perc = round((percent$Proportion+0.1)*1000)
# #vector_13(round)
# Color_per = colorRampPalette(c("gray100","red4"))(1000)
# #numr,100
# map_colors <-  Color_per[Amount_perc]
# #vector of 13
#Instead, weâll just map the fill to PRUID, i.e. the province level. But try mapping fill to CDUID instead (the census district ID), and see what happens.
p <- ggplot(data = canada_cd_zone_K,
mapping = aes(fill = Total), show.legend=F)
p_out <- p + geom_sf(color = "gray60",
size = 0.001) +
scale_fill_gradientn(colours = c('white','pink','red4')) +
theme_map() +
theme(panel.grid.major = element_line(color = "white"),
legend.key = element_rect(color = "gray40", size = 0.1))
#ggsave("figures/canada.pdf", p_out, height = 12, width = 15)
p_out
p <- ggplot(data = canada_cd_zone_K,
mapping = aes(fill = Total), show.legend=F)
p_out <- p + geom_sf(color = "gray60",
size = 0.001) +
scale_fill_gradient() +
theme_map() +
theme(panel.grid.major = element_line(color = "white"),
legend.key = element_rect(color = "gray40", size = 0.1))
#ggsave("figures/canada.pdf", p_out, height = 12, width = 15)
p_out
p <- ggplot(data = canada_cd_zone_K,
mapping = aes(fill = Total), show.legend=F)
p_out <- p + geom_sf(color = "gray60",
size = 0.001) +
scale_fill_gradient(low = 'lightblue', high = 'navy') +
theme_map() +
theme(panel.grid.major = element_line(color = "white"),
legend.key = element_rect(color = "gray40", size = 0.1))
#ggsave("figures/canada.pdf", p_out, height = 12, width = 15)
p_out
regionalsummary = summary_by_zone %>% mutate(Region = car::recode(Zone, "c('K','L','M','N') = 'SE Ontario';
c('G','E','B') = 'East Quebec & Maritimes';
c('J','A','C') = 'NW Quebec, Labrador & Islands';
c('P','R','S') = 'W Ontario & Praries';
c('T','V') = 'BC & Alberta';
c('Y','X') = 'Territories'
"))
regionalsummary
canada_cd_zone = canada_cd %>% mutate(Zone = substr(as.character(CFSAUID),1,1))
canada_cd_zone = merge(canada_cd_zone, summary_by_zone, by='Zone')
canada_cd_zone_K = canada_cd_zone %>% filter(Region == 'NW Quebec, Labrador & Islands')
## Simple feature collection with 293 features and 6 fields
## geometry type:  MULTIPOLYGON
## dimension:      XY
## bbox:           xmin: -2529065 ymin: 5816874 xmax: 2793734 ymax: 10396190
## epsg (SRID):    NA
## proj4string:    +proj=lcc +lat_1=49 +lat_2=77 +lat_0=0 +lon_0=-91.52 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs
## First 10 features:
##    CDUID          CDNAME CDTYPE PRUID                                  PRNAME rmapshaperid                       geometry
## 1   4609 Division No.  9    CDR    46                                Manitoba            0 MULTIPOLYGON (((-457449.9 6...
## 2   5901   East Kootenay     RD    59 British Columbia / Colombie-Britannique            1 MULTIPOLYGON (((-1628202 69...
## 3   5933 Thompson-Nicola     RD    59 British Columbia / Colombie-Britannique            2 MULTIPOLYGON (((-1838098 74...
## 4   4816 Division No. 16    CDR    48                                 Alberta            3 MULTIPOLYGON (((-988280.5 7...
## 5   5919 Cowichan Valley     RD    59 British Columbia / Colombie-Britannique            4 MULTIPOLYGON (((-2253700 71...
## 6   4621 Division No. 21    CDR    46                                Manitoba            5 MULTIPOLYGON (((-461578.4 7...
## 7   4608 Division No.  8    CDR    46                                Manitoba            6 MULTIPOLYGON (((-500377.6 6...
## 8   4811 Division No. 11    CDR    48                                 Alberta            7 MULTIPOLYGON (((-1350599 73...
## 9   4802 Division No.  2    CDR    48                                 Alberta            8 MULTIPOLYGON (((-1372235 69...
##10  5951 Bulkley-Nechako     RD    59 British Columbia / Colombie-Britannique            9 ## MULTIPOLYGON (((-1921887 78...
#Finally, and just because I donât have any census-district-level data to hand at the moment, we make a vector of repeated colors to fill in the map, for decoration only, if you want to color all the census divisions.
# Amount_perc = round((percent$Proportion+0.1)*1000)
# #vector_13(round)
# Color_per = colorRampPalette(c("gray100","red4"))(1000)
# #numr,100
# map_colors <-  Color_per[Amount_perc]
# #vector of 13
#Instead, weâll just map the fill to PRUID, i.e. the province level. But try mapping fill to CDUID instead (the census district ID), and see what happens.
p <- ggplot(data = canada_cd_zone_K,
mapping = aes(fill = Total), show.legend=F)
p_out <- p + geom_sf(color = "gray60",
size = 0.001) +
scale_fill_gradient(low = 'lightblue', high = 'navy') +
theme_map() +
theme(panel.grid.major = element_line(color = "white"),
legend.key = element_rect(color = "gray40", size = 0.1))
#ggsave("figures/canada.pdf", p_out, height = 12, width = 15)
p_out
canada_cd_zone = merge(canada_cd_zone, regionalsummary, by='Zone')
canada_cd_zone_K = canada_cd_zone %>% filter(Region == 'NW Quebec, Labrador & Islands')
## Simple feature collection with 293 features and 6 fields
## geometry type:  MULTIPOLYGON
## dimension:      XY
## bbox:           xmin: -2529065 ymin: 5816874 xmax: 2793734 ymax: 10396190
## epsg (SRID):    NA
## proj4string:    +proj=lcc +lat_1=49 +lat_2=77 +lat_0=0 +lon_0=-91.52 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs
## First 10 features:
##    CDUID          CDNAME CDTYPE PRUID                                  PRNAME rmapshaperid                       geometry
## 1   4609 Division No.  9    CDR    46                                Manitoba            0 MULTIPOLYGON (((-457449.9 6...
## 2   5901   East Kootenay     RD    59 British Columbia / Colombie-Britannique            1 MULTIPOLYGON (((-1628202 69...
## 3   5933 Thompson-Nicola     RD    59 British Columbia / Colombie-Britannique            2 MULTIPOLYGON (((-1838098 74...
## 4   4816 Division No. 16    CDR    48                                 Alberta            3 MULTIPOLYGON (((-988280.5 7...
## 5   5919 Cowichan Valley     RD    59 British Columbia / Colombie-Britannique            4 MULTIPOLYGON (((-2253700 71...
## 6   4621 Division No. 21    CDR    46                                Manitoba            5 MULTIPOLYGON (((-461578.4 7...
## 7   4608 Division No.  8    CDR    46                                Manitoba            6 MULTIPOLYGON (((-500377.6 6...
## 8   4811 Division No. 11    CDR    48                                 Alberta            7 MULTIPOLYGON (((-1350599 73...
## 9   4802 Division No.  2    CDR    48                                 Alberta            8 MULTIPOLYGON (((-1372235 69...
##10  5951 Bulkley-Nechako     RD    59 British Columbia / Colombie-Britannique            9 ## MULTIPOLYGON (((-1921887 78...
#Finally, and just because I donât have any census-district-level data to hand at the moment, we make a vector of repeated colors to fill in the map, for decoration only, if you want to color all the census divisions.
# Amount_perc = round((percent$Proportion+0.1)*1000)
# #vector_13(round)
# Color_per = colorRampPalette(c("gray100","red4"))(1000)
# #numr,100
# map_colors <-  Color_per[Amount_perc]
# #vector of 13
#Instead, weâll just map the fill to PRUID, i.e. the province level. But try mapping fill to CDUID instead (the census district ID), and see what happens.
p <- ggplot(data = canada_cd_zone_K,
mapping = aes(fill = Total), show.legend=F)
p_out <- p + geom_sf(color = "gray60",
size = 0.001) +
scale_fill_gradient(low = 'lightblue', high = 'navy') +
theme_map() +
theme(panel.grid.major = element_line(color = "white"),
legend.key = element_rect(color = "gray40", size = 0.1))
#ggsave("figures/canada.pdf", p_out, height = 12, width = 15)
p_out
canada_cd_zone
canada_cd <- st_read("canada_cd2_sim.geojson", quiet = TRUE)
canada_cd
## Simple feature collection with 293 features and 6 fields
## geometry type:  MULTIPOLYGON
## dimension:      XY
## bbox:           xmin: -141.0181 ymin: 41.7297 xmax: -52.6194 ymax: 83.1355
## epsg (SRID):    4269
## proj4string:    +proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs
## First 10 features:
##    CDUID          CDNAME CDTYPE PRUID                                  PRNAME rmapshaperid                       geometry
## 1   4609 Division No.  9    CDR    46                                Manitoba            0 MULTIPOLYGON (((-97.9474 50...
## 2   5901   East Kootenay     RD    59 British Columbia / Colombie-Britannique            1 MULTIPOLYGON (((-114.573 49...
## 3   5933 Thompson-Nicola     RD    59 British Columbia / Colombie-Britannique            2 MULTIPOLYGON (((-120.1425 5...
## 4   4816 Division No. 16    CDR    48                                 Alberta            3 MULTIPOLYGON (((-110 60, -1...
## 5   5919 Cowichan Valley     RD    59 British Columbia / Colombie-Britannique            4 MULTIPOLYGON (((-123.658 48...
## 6   4621 Division No. 21    CDR    46                                Manitoba            5 MULTIPOLYGON (((-99.0172 55...
## 7   4608 Division No.  8    CDR    46                                Manitoba            6 MULTIPOLYGON (((-98.6436 50...
## 8   4811 Division No. 11    CDR    48                                 Alberta            7 MULTIPOLYGON (((-112.8438 5...
## 9   4802 Division No.  2    CDR    48                                 Alberta            8 MULTIPOLYGON (((-111.3881 5...
## 10  5951 Bulkley-Nechako     RD    59 British Columbia / Colombie-Britannique            9 MULTIPOLYGON (((-124.4407 5...
#Notice the proj4string there in the metadata. Weâre going to change that to Canadaâs favorite projection, the Lambert Conformal Conic projection. See this discussion for details.
canada_cd <- st_transform(canada_cd, crs = "+proj=lcc +lat_1=49 +lat_2=77 +lon_0=-91.52 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs")
canada_cd_zone = canada_cd %>% mutate(Zone = substr(as.character(CFSAUID),1,1))
canada_cd_zone = merge(canada_cd_zone, regionalsummary, by='Zone')
canada_cd_zone_K = canada_cd_zone %>% filter(Region == 'NW Quebec, Labrador & Islands')
## Simple feature collection with 293 features and 6 fields
## geometry type:  MULTIPOLYGON
## dimension:      XY
## bbox:           xmin: -2529065 ymin: 5816874 xmax: 2793734 ymax: 10396190
## epsg (SRID):    NA
## proj4string:    +proj=lcc +lat_1=49 +lat_2=77 +lat_0=0 +lon_0=-91.52 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs
## First 10 features:
##    CDUID          CDNAME CDTYPE PRUID                                  PRNAME rmapshaperid                       geometry
## 1   4609 Division No.  9    CDR    46                                Manitoba            0 MULTIPOLYGON (((-457449.9 6...
## 2   5901   East Kootenay     RD    59 British Columbia / Colombie-Britannique            1 MULTIPOLYGON (((-1628202 69...
## 3   5933 Thompson-Nicola     RD    59 British Columbia / Colombie-Britannique            2 MULTIPOLYGON (((-1838098 74...
## 4   4816 Division No. 16    CDR    48                                 Alberta            3 MULTIPOLYGON (((-988280.5 7...
## 5   5919 Cowichan Valley     RD    59 British Columbia / Colombie-Britannique            4 MULTIPOLYGON (((-2253700 71...
## 6   4621 Division No. 21    CDR    46                                Manitoba            5 MULTIPOLYGON (((-461578.4 7...
## 7   4608 Division No.  8    CDR    46                                Manitoba            6 MULTIPOLYGON (((-500377.6 6...
## 8   4811 Division No. 11    CDR    48                                 Alberta            7 MULTIPOLYGON (((-1350599 73...
## 9   4802 Division No.  2    CDR    48                                 Alberta            8 MULTIPOLYGON (((-1372235 69...
##10  5951 Bulkley-Nechako     RD    59 British Columbia / Colombie-Britannique            9 ## MULTIPOLYGON (((-1921887 78...
#Finally, and just because I donât have any census-district-level data to hand at the moment, we make a vector of repeated colors to fill in the map, for decoration only, if you want to color all the census divisions.
# Amount_perc = round((percent$Proportion+0.1)*1000)
# #vector_13(round)
# Color_per = colorRampPalette(c("gray100","red4"))(1000)
# #numr,100
# map_colors <-  Color_per[Amount_perc]
# #vector of 13
#Instead, weâll just map the fill to PRUID, i.e. the province level. But try mapping fill to CDUID instead (the census district ID), and see what happens.
p <- ggplot(data = canada_cd_zone_K,
mapping = aes(fill = Total), show.legend=F)
p_out <- p + geom_sf(color = "gray60",
size = 0.001) +
scale_fill_gradient(low = 'lightblue', high = 'navy') +
theme_map() +
theme(panel.grid.major = element_line(color = "white"),
legend.key = element_rect(color = "gray40", size = 0.1))
#ggsave("figures/canada.pdf", p_out, height = 12, width = 15)
p_out
canada_cd_zone_K = canada_cd_zone %>% filter(Region == 'East Quebec & Maritimes')
## Simple feature collection with 293 features and 6 fields
## geometry type:  MULTIPOLYGON
## dimension:      XY
## bbox:           xmin: -2529065 ymin: 5816874 xmax: 2793734 ymax: 10396190
## epsg (SRID):    NA
## proj4string:    +proj=lcc +lat_1=49 +lat_2=77 +lat_0=0 +lon_0=-91.52 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs
## First 10 features:
##    CDUID          CDNAME CDTYPE PRUID                                  PRNAME rmapshaperid                       geometry
## 1   4609 Division No.  9    CDR    46                                Manitoba            0 MULTIPOLYGON (((-457449.9 6...
## 2   5901   East Kootenay     RD    59 British Columbia / Colombie-Britannique            1 MULTIPOLYGON (((-1628202 69...
## 3   5933 Thompson-Nicola     RD    59 British Columbia / Colombie-Britannique            2 MULTIPOLYGON (((-1838098 74...
## 4   4816 Division No. 16    CDR    48                                 Alberta            3 MULTIPOLYGON (((-988280.5 7...
## 5   5919 Cowichan Valley     RD    59 British Columbia / Colombie-Britannique            4 MULTIPOLYGON (((-2253700 71...
## 6   4621 Division No. 21    CDR    46                                Manitoba            5 MULTIPOLYGON (((-461578.4 7...
## 7   4608 Division No.  8    CDR    46                                Manitoba            6 MULTIPOLYGON (((-500377.6 6...
## 8   4811 Division No. 11    CDR    48                                 Alberta            7 MULTIPOLYGON (((-1350599 73...
## 9   4802 Division No.  2    CDR    48                                 Alberta            8 MULTIPOLYGON (((-1372235 69...
##10  5951 Bulkley-Nechako     RD    59 British Columbia / Colombie-Britannique            9 ## MULTIPOLYGON (((-1921887 78...
#Finally, and just because I donât have any census-district-level data to hand at the moment, we make a vector of repeated colors to fill in the map, for decoration only, if you want to color all the census divisions.
# Amount_perc = round((percent$Proportion+0.1)*1000)
# #vector_13(round)
# Color_per = colorRampPalette(c("gray100","red4"))(1000)
# #numr,100
# map_colors <-  Color_per[Amount_perc]
# #vector of 13
#Instead, weâll just map the fill to PRUID, i.e. the province level. But try mapping fill to CDUID instead (the census district ID), and see what happens.
p <- ggplot(data = canada_cd_zone_K,
mapping = aes(fill = Total), show.legend=F)
p_out <- p + geom_sf(color = "gray60",
size = 0.001) +
scale_fill_gradient(low = 'lightblue', high = 'navy') +
theme_map() +
theme(panel.grid.major = element_line(color = "white"),
legend.key = element_rect(color = "gray40", size = 0.1))
#ggsave("figures/canada.pdf", p_out, height = 12, width = 15)
p_out
canada_cd_zone_K = canada_cd_zone %>% filter(Region == 'W Ontario & Praries')
## Simple feature collection with 293 features and 6 fields
## geometry type:  MULTIPOLYGON
## dimension:      XY
## bbox:           xmin: -2529065 ymin: 5816874 xmax: 2793734 ymax: 10396190
## epsg (SRID):    NA
## proj4string:    +proj=lcc +lat_1=49 +lat_2=77 +lat_0=0 +lon_0=-91.52 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs
## First 10 features:
##    CDUID          CDNAME CDTYPE PRUID                                  PRNAME rmapshaperid                       geometry
## 1   4609 Division No.  9    CDR    46                                Manitoba            0 MULTIPOLYGON (((-457449.9 6...
## 2   5901   East Kootenay     RD    59 British Columbia / Colombie-Britannique            1 MULTIPOLYGON (((-1628202 69...
## 3   5933 Thompson-Nicola     RD    59 British Columbia / Colombie-Britannique            2 MULTIPOLYGON (((-1838098 74...
## 4   4816 Division No. 16    CDR    48                                 Alberta            3 MULTIPOLYGON (((-988280.5 7...
## 5   5919 Cowichan Valley     RD    59 British Columbia / Colombie-Britannique            4 MULTIPOLYGON (((-2253700 71...
## 6   4621 Division No. 21    CDR    46                                Manitoba            5 MULTIPOLYGON (((-461578.4 7...
## 7   4608 Division No.  8    CDR    46                                Manitoba            6 MULTIPOLYGON (((-500377.6 6...
## 8   4811 Division No. 11    CDR    48                                 Alberta            7 MULTIPOLYGON (((-1350599 73...
## 9   4802 Division No.  2    CDR    48                                 Alberta            8 MULTIPOLYGON (((-1372235 69...
##10  5951 Bulkley-Nechako     RD    59 British Columbia / Colombie-Britannique            9 ## MULTIPOLYGON (((-1921887 78...
#Finally, and just because I donât have any census-district-level data to hand at the moment, we make a vector of repeated colors to fill in the map, for decoration only, if you want to color all the census divisions.
# Amount_perc = round((percent$Proportion+0.1)*1000)
# #vector_13(round)
# Color_per = colorRampPalette(c("gray100","red4"))(1000)
# #numr,100
# map_colors <-  Color_per[Amount_perc]
# #vector of 13
#Instead, weâll just map the fill to PRUID, i.e. the province level. But try mapping fill to CDUID instead (the census district ID), and see what happens.
p <- ggplot(data = canada_cd_zone_K,
mapping = aes(fill = Total), show.legend=F)
p_out <- p + geom_sf(color = "gray60",
size = 0.001) +
scale_fill_gradient(low = 'lightblue', high = 'navy') +
theme_map() +
theme(panel.grid.major = element_line(color = "white"),
legend.key = element_rect(color = "gray40", size = 0.1))
#ggsave("figures/canada.pdf", p_out, height = 12, width = 15)
p_out
canada_cd_zone_K = canada_cd_zone %>% filter(Region == 'BC & Alberta')
## Simple feature collection with 293 features and 6 fields
## geometry type:  MULTIPOLYGON
## dimension:      XY
## bbox:           xmin: -2529065 ymin: 5816874 xmax: 2793734 ymax: 10396190
## epsg (SRID):    NA
## proj4string:    +proj=lcc +lat_1=49 +lat_2=77 +lat_0=0 +lon_0=-91.52 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs
## First 10 features:
##    CDUID          CDNAME CDTYPE PRUID                                  PRNAME rmapshaperid                       geometry
## 1   4609 Division No.  9    CDR    46                                Manitoba            0 MULTIPOLYGON (((-457449.9 6...
## 2   5901   East Kootenay     RD    59 British Columbia / Colombie-Britannique            1 MULTIPOLYGON (((-1628202 69...
## 3   5933 Thompson-Nicola     RD    59 British Columbia / Colombie-Britannique            2 MULTIPOLYGON (((-1838098 74...
## 4   4816 Division No. 16    CDR    48                                 Alberta            3 MULTIPOLYGON (((-988280.5 7...
## 5   5919 Cowichan Valley     RD    59 British Columbia / Colombie-Britannique            4 MULTIPOLYGON (((-2253700 71...
## 6   4621 Division No. 21    CDR    46                                Manitoba            5 MULTIPOLYGON (((-461578.4 7...
## 7   4608 Division No.  8    CDR    46                                Manitoba            6 MULTIPOLYGON (((-500377.6 6...
## 8   4811 Division No. 11    CDR    48                                 Alberta            7 MULTIPOLYGON (((-1350599 73...
## 9   4802 Division No.  2    CDR    48                                 Alberta            8 MULTIPOLYGON (((-1372235 69...
##10  5951 Bulkley-Nechako     RD    59 British Columbia / Colombie-Britannique            9 ## MULTIPOLYGON (((-1921887 78...
#Finally, and just because I donât have any census-district-level data to hand at the moment, we make a vector of repeated colors to fill in the map, for decoration only, if you want to color all the census divisions.
# Amount_perc = round((percent$Proportion+0.1)*1000)
# #vector_13(round)
# Color_per = colorRampPalette(c("gray100","red4"))(1000)
# #numr,100
# map_colors <-  Color_per[Amount_perc]
# #vector of 13
#Instead, weâll just map the fill to PRUID, i.e. the province level. But try mapping fill to CDUID instead (the census district ID), and see what happens.
p <- ggplot(data = canada_cd_zone_K,
mapping = aes(fill = Total), show.legend=F)
p_out <- p + geom_sf(color = "gray60",
size = 0.001) +
scale_fill_gradient(low = 'lightblue', high = 'navy') +
theme_map() +
theme(panel.grid.major = element_line(color = "white"),
legend.key = element_rect(color = "gray40", size = 0.1))
#ggsave("figures/canada.pdf", p_out, height = 12, width = 15)
p_out
canada_cd <- st_read("canada_cd2_sim.geojson", quiet = TRUE)
canada_cd
## Simple feature collection with 293 features and 6 fields
## geometry type:  MULTIPOLYGON
## dimension:      XY
## bbox:           xmin: -141.0181 ymin: 41.7297 xmax: -52.6194 ymax: 83.1355
## epsg (SRID):    4269
## proj4string:    +proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs
## First 10 features:
##    CDUID          CDNAME CDTYPE PRUID                                  PRNAME rmapshaperid                       geometry
## 1   4609 Division No.  9    CDR    46                                Manitoba            0 MULTIPOLYGON (((-97.9474 50...
## 2   5901   East Kootenay     RD    59 British Columbia / Colombie-Britannique            1 MULTIPOLYGON (((-114.573 49...
## 3   5933 Thompson-Nicola     RD    59 British Columbia / Colombie-Britannique            2 MULTIPOLYGON (((-120.1425 5...
## 4   4816 Division No. 16    CDR    48                                 Alberta            3 MULTIPOLYGON (((-110 60, -1...
## 5   5919 Cowichan Valley     RD    59 British Columbia / Colombie-Britannique            4 MULTIPOLYGON (((-123.658 48...
## 6   4621 Division No. 21    CDR    46                                Manitoba            5 MULTIPOLYGON (((-99.0172 55...
## 7   4608 Division No.  8    CDR    46                                Manitoba            6 MULTIPOLYGON (((-98.6436 50...
## 8   4811 Division No. 11    CDR    48                                 Alberta            7 MULTIPOLYGON (((-112.8438 5...
## 9   4802 Division No.  2    CDR    48                                 Alberta            8 MULTIPOLYGON (((-111.3881 5...
## 10  5951 Bulkley-Nechako     RD    59 British Columbia / Colombie-Britannique            9 MULTIPOLYGON (((-124.4407 5...
#Notice the proj4string there in the metadata. Weâre going to change that to Canadaâs favorite projection, the Lambert Conformal Conic projection. See this discussion for details.
canada_cd <- st_transform(canada_cd, crs = "+proj=lcc +lat_1=49 +lat_2=77 +lon_0=-91.52 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs")
canada_cd_zone = canada_cd %>% mutate(Zone = substr(as.character(CFSAUID),1,1))
canada_cd_zone = merge(canada_cd_zone, regionalsummary, by='Zone')
canada_cd_zone_K = canada_cd_zone %>% filter(Region == 'BC & Alberta')
canada_cd
canada_cd_zone
canada_cd_zone_K = canada_cd_zone %>% filter(Region == 'SE Ontario')
canada_cd_zone_K
p <- ggplot(data = canada_cd_zone_K,
mapping = aes(fill = Total), show.legend=F)
p_out <- p + geom_sf(color = "gray60",
size = 0.001) +
scale_fill_gradient(low = 'lightblue', high = 'navy') +
theme_map() +
theme(panel.grid.major = element_line(color = "white"),
legend.key = element_rect(color = "gray40", size = 0.1))
#ggsave("figures/canada.pdf", p_out, height = 12, width = 15)
p_out
library(shiny)
ui <- fluidPage(
leafletOutput("canada")
)
map <- leaflet()%>%
addTiles(
urlTemplate = "//{s}.tiles.mapbox.com/v3/jcheng.map-5ebohr46/{z}/{x}/{y}.png",
attribution = 'Maps by <a href="http://www.mapbox.com/">Mapbox</a>'
) %>%setView(lng = -105, lat = 59, zoom = 4)
server <- function(input, output, session) {
output$canada <- renderLeaflet(map)
observeEvent(input, {
leafletProxy("canada", session)%>%
addGeoJSON(canada_cd$geometry)})
}
app <- shinyApp(ui, server)
if (interactive()) app
install.packages("shiny")
library(shiny)
ui <- fluidPage(
leafletOutput("canada")
)
map <- leaflet()%>%
addTiles(
urlTemplate = "//{s}.tiles.mapbox.com/v3/jcheng.map-5ebohr46/{z}/{x}/{y}.png",
attribution = 'Maps by <a href="http://www.mapbox.com/">Mapbox</a>'
) %>%setView(lng = -105, lat = 59, zoom = 4)
server <- function(input, output, session) {
output$canada <- renderLeaflet(map)
observeEvent(input, {
leafletProxy("canada", session)%>%
addGeoJSON(canada_cd$geometry)})
}
app <- shinyApp(ui, server)
if (interactive()) app
install.packages("shiny")
library(shiny)
ui <- fluidPage(
leafletOutput("canada")
)
map <- leaflet()%>%
addTiles(
urlTemplate = "//{s}.tiles.mapbox.com/v3/jcheng.map-5ebohr46/{z}/{x}/{y}.png",
attribution = 'Maps by <a href="http://www.mapbox.com/">Mapbox</a>'
) %>%setView(lng = -105, lat = 59, zoom = 4)
server <- function(input, output, session) {
output$canada <- renderLeaflet(map)
observeEvent(input, {
leafletProxy("canada", session)%>%
addGeoJSON(canada_cd)})
}
app <- shinyApp(ui, server)
if (interactive()) app
library(shiny)
ui <- fluidPage(
leafletOutput("canada")
)
library(leaflet)
install.packages("leaflet")
ui <- fluidPage(
leafletOutput("canada")
)
library(leaflet)
ui <- fluidPage(
leafletOutput("canada")
)
map <- leaflet()%>%
addTiles(
urlTemplate = "//{s}.tiles.mapbox.com/v3/jcheng.map-5ebohr46/{z}/{x}/{y}.png",
attribution = 'Maps by <a href="http://www.mapbox.com/">Mapbox</a>'
) %>%setView(lng = -105, lat = 59, zoom = 4)
server <- function(input, output, session) {
output$canada <- renderLeaflet(map)
observeEvent(input, {
leafletProxy("canada", session)%>%
addGeoJSON(canada_cd)})
}
app <- shinyApp(ui, server)
if (interactive()) app
?leafletProxy
canada_cd
head(canada_cd)
if (interactive()) app
head(canada_cd)
View(canada_cd)
library(shiny)
ui <- fluidPage(
leafletOutput("canada")
)
map <- leaflet()%>%
addTiles(
urlTemplate = "//{s}.tiles.mapbox.com/v3/jcheng.map-5ebohr46/{z}/{x}/{y}.png",
attribution = 'Maps by <a href="http://www.mapbox.com/">Mapbox</a>'
) %>%setView(lng = -105, lat = 59, zoom = 4)
server <- function(input, output, session) {
output$canada <- renderLeaflet(map)
observeEvent(input, {
leafletProxy("canada", session)})
}
app <- shinyApp(ui, server)
if (interactive()) app
librarY(maps)
library(maps)
canada.cities
unique(data$Type)
unique(data$Type)
